
import { IsInt, IsNotEmpty, IsString, IsEnum, IsBoolean } from 'class-validator';
import { MessageStatus } from '@prisma/client';  // Assurez-vous d'importer l'enum correct depuis Prisma

export class CreateMessageDto {
  @IsString()
  @IsNotEmpty()
  object: string;

  @IsString()
  @IsNotEmpty()
  content: string;

  @IsEnum(MessageStatus)
  status: MessageStatus;


  @IsNotEmpty()

  @IsInt()
  channel_id: number;

  @IsInt()
  campaign_id: number;

  @IsInt()
  audience_id: number;
}


import { IsInt, IsNotEmpty } from "class-validator";

export class FindMessagesByCampaignDto {
    @IsInt()
    @IsNotEmpty()
    campaignId: number;
  }


  import { MessageStatus } from "@prisma/client";
import { IsEnum, IsNotEmpty } from "class-validator";

export class GetMessagesByStatusDto {
    @IsEnum(MessageStatus)
    @IsNotEmpty()
    status: MessageStatus;
  }

  import { IsInt, IsNotEmpty } from "class-validator";

export class SendMessageDto {
    @IsInt()
    @IsNotEmpty()
    messageId: number;
  }

  // dto/update-audience.dto.ts
import { PartialType } from '@nestjs/mapped-types';
import { CreateMessageDto } from './createMessageDto';

export class UpdateMessageDto extends PartialType(CreateMessageDto) {}
